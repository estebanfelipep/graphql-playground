# Comments in GraphQL strings (such as this one) start with the hash (#) symbol.

type Transaction {
  id: Int!
  title: String
  description: String
  amount: Float!
  date: String!

  categoryId: Int!
  category: Category

  accountId: Int!
  account: Account
}

type Category {
  id: Int!
  name: String!
  description: String
  transactions: [Transaction]
}

type Account {
  id: Int!
  name: String!
  isDefault: Boolean!
  transactions: [Transaction]
}

# The "Query" type is special: it lists all of the available queries that
# clients can execute, along with the return type for each.
type Query {
  transactions: [Transaction]
  categories: [Category]
  accounts: [Account]
}

input CreateTransaction {
  title: String
  description: String
  amount: Float
  date: String
  categoryId: Int!
  accountId: Int!
}

type Mutation {
  createTransaction(transaction: CreateTransaction!): Transaction
  updateTransaction(
    id: Int!
    title: String
    description: String
    amount: Float
    date: String
    categoryId: Int
    accountId: Int
  ): Transaction
  deleteTransaction(id: Int!): Transaction

  createCategory(name: String, description: String): Category
  updateCategory(id: Int!, name: String, description: String): Category
  deleteCategory(id: Int!): Category

  createAccount(name: String, isDefault: Boolean): Account
  updateAccount(id: Int!, name: String, isDefault: Boolean): Account
  deleteAccount(id: Int!): Account
}

# type AddBookMutationResponse {
#   code: String!
#   success: Boolean!
#   message: String!
#   book: Book
# }

# type Mutation {
#   addBook(title: String, author: String): AddBookMutationResponse
# }
